version: "3"
services:
  redis:
    image: redis:6.2.5
    ports:
      - 6379:6379
    environment:
      - TZ=UTC
    healthcheck:
      test: redis-cli ping
      interval: 1s
      timeout: 3s
      retries: 30
    restart: unless-stopped
  postgres:
    image: postgres:13.3
    ports:
      - 5433:5432
    environment:
      - POSTGRES_DB=cloud_services
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGTZ=UTC
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 5s
      retries: 5
  api:
    build: .
    ports:
      - 8000:8000
    env_file:
      - docker.env
    command: bash -c "python manage.py makemigrations && python manage.py migrate && python -m django_createsuperuser 'admin' 'adminadmin' && gunicorn cloud_services.wsgi:application --bind 0.0.0.0:8000"
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

  worker:
    build: .
    env_file:
      - docker.env
    command: python manage.py run_huey
    deploy:
      mode: replicated
      replicas: 4
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
